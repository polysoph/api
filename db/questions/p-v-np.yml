---
id: 2
title: P vs. NP
slug: p-v-np
category: 3
config:
  tasks: true
  milestones: true
description: |
  The P vs. NP problem asks whether every problem whose solution can be quickly _verified_ by a computer can also be quickly _solved_ by a computer. First mentioned in a letter between Kurt Gödel to John von Neumann, Gödel asked whether a certain NP-complete problem could be solved in quadratic or linear time. The precise statement of the P versus NP problem was introduced in 1971 by Stephen Cook in his seminal paper "The complexity of theorem proving procedures."
significance: |
  Many of the problems we know to be in NP or NP-complete are problems that we actually want to solve, problems that arise, say, in circuit design or in other industrial design applications. Furthermore, since the diverse NP-complete problems are all polynomial time related to one another, if we should ever learn a feasible means of solving any of them, we would have feasible means for all of them. The result of this would be extraordinary, something like a second industrial revolution. It would be as though we suddenly had a huge permanent increase in computational power, allowing us to solve an enormous array of practical problems heretofore out of our computational reach. The P vs. NP question is important in part because of this tantalizing possibility.
prior_work: ""
citation:
  doi: "10.18258/3356"
